name: Fetch AOE2 Personal Stats

on:
  workflow_dispatch:

jobs:
  fetch-stats:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Fetch AOE2 Personal Stats
      run: |
        set -e
        echo "[]" > elo_data.json
        profiles=(/steam/76561198067966567 /steam/76561198123456789 /steam/76561198234567890)
        for profile in "${profiles[@]}"; do
          echo "Fetching data for profile: $profile"
          response=$(curl -s "https://aoe-api.reliclink.com/community/leaderboard/GetPersonalStat?title=age2&profile_names=\[%22$profile%22\]")
          echo "Response: $response"

          if [ -z "$response" ] || ! echo "$response" | jq -e . >/dev/null 2>&1; then
            echo "Error: Invalid or empty JSON response for profile $profile" >&2
            continue
          fi

          leaderboardStats=$(echo "$response" | jq '.leaderboardStats // []')
          if [ "$(echo "$leaderboardStats" | jq length)" -eq 0 ]; then
            echo "No leaderboardStats found for profile $profile"
            continue
          fi

          elo1v1=$(echo "$leaderboardStats" | jq 'map(select(.leaderboard_id == 3) | .rating) | first // null')
          eloTeam=$(echo "$leaderboardStats" | jq 'map(select(.leaderboard_id == 4) | .rating) | first // null')

          echo "elo1v1: $elo1v1, eloTeam: $eloTeam"

          jq --arg profile "$profile" \
             --argjson elo1v1 "$elo1v1" \
             --argjson eloTeam "$eloTeam" \
             '. += [{
                "profile": $profile,
                "elo1v1": {
                  "rating": $elo1v1
                },
                "eloTeam": {
                  "rating": $eloTeam
                }
              }]' elo_data.json > tmp.json && mv tmp.json elo_data.json
        done

    - name: Upload JSON output
      uses: actions/upload-artifact@v2
      with:
        name: elo_data
        path: elo_data.json
