name: Fetch JSON Contents

on:
  workflow_dispatch: # Allows manual trigger of the workflow

jobs:
  fetch-json:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch ELO Data and Update JSON
        run: |
          set -e
          echo "[]" > elo_data.json
          profiles=("/steam/76561198067966567" "/steam/76561198123456789" "/steam/76561198234567890")
          for profile in "${profiles[@]}"; do
            echo "Fetching data for profile: $profile"
            # Properly encode the profile name
            encoded_profile=$(jq -Rn --arg profile "$profile" '$profile | @uri')
            echo "Encoded profile: $encoded_profile"
            response=$(curl -s "https://aoe-api.reliclink.com/community/leaderboard/GetPersonalStat?title=age2&profile_names=[\"$encoded_profile\"]")
            echo "Raw Response: $response"  # Output the raw response for debugging
            if [ -z "$response" ]; then
              echo "Error: No response for profile $profile" >&2
              exit 1
            fi
            # Check if the response is valid JSON
            if ! echo "$response" | jq . > /dev/null 2>&1; then
              echo "Error: Invalid JSON response for profile $profile" >&2
              echo "$response" # Output the response for debugging
              exit 1
            fi
            # Extract ELO ratings
            elo1v1=$(echo "$response" | jq '.leaderboardStats[] | select(.leaderboard_id == 3) | .rating')
            eloTeam=$(echo "$response" | jq '.leaderboardStats[] | select(.leaderboard_id == 4) | .rating')
            if [ -z "$elo1v1" ]; then
              elo1v1=null
            fi
            if [ -z "$eloTeam" ]; then
              eloTeam=null
            fi
            echo "elo1v1: $elo1v1, eloTeam: $eloTeam"
            jq --arg profile "$profile" \
               --argjson elo1v1 "$elo1v1" \
               --argjson eloTeam "$eloTeam" \
               '. += [{
                  "profile": $profile,
                  "elo1v1": {
                    "rating": $elo1v1
                  },
                  "eloTeam": {
                    "rating": $eloTeam
                  }
                }]' elo_data.json > tmp.json && mv tmp.json elo_data.json
          done
        shell: bash
