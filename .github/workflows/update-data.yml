name: Update ELO Data

on:
  schedule:
    - cron: '*/5 * * * *' # Runs every 5mins
  push:
    branches:
      - main

jobs:
  update-elo-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch ELO Data and Update JSON
        run: |
          set -e
          echo "[]" > elo_data.json
          profiles=(/steam/76561198067966567 /steam/76561198123456789 /steam/76561198234567890)
          for profile in "${profiles[@]}"; do
            response=$(curl -s "https://aoe-api.reliclink.com/community/leaderboard/GetPersonalStat?title=age2&profile_names=\[%22$profile%22\]")
            elo1v1=$(echo "$response" | jq '.leaderboardStats[] | select(.leaderboard_id == 3) | .rating')
            eloTeam=$(echo "$response" | jq '.leaderboardStats[] | select(.leaderboard_id == 4) | .rating')
            [ -z "$elo1v1" ] && elo1v1=null
            [ -z "$eloTeam" ] && eloTeam=null
            jq --arg profile "$profile" \
               --argjson elo1v1 "$elo1v1" \
               --argjson eloTeam "$eloTeam" \
               '. += [{
                  "profile": $profile,
                  "elo1v1": {
                    "rating": $elo1v1
                  },
                  "eloTeam": {
                    "rating": $eloTeam
                  }
                }]' elo_data.json > tmp.json && mv tmp.json elo_data.json
          done

      - name: Commit and Push JSON
        env:
          CLASSIC_PAT: ${{ secrets.CLASSIC_PAT }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.CLASSIC_PAT }}@github.com/${{ github.repository }}
          git add elo_data.json
          git commit -m "Update ELO data"
          git push origin HEAD:main
